name: Build and Deploy to EKS

on: 
  push: 
    branches: 
      - main

env:
  NIX_NIXPKGS_CHANNEL: https://nixos.org/channels/nixpkgs-22.05-darwin
  NIX_CONTAINER_IMAGE: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee
  NIX_INSTALL_SCRIPT: https://releases.nixos.org/nix/nix-2.10.3/install
  
  CACHE: composable-whitepaper
  CACHIX_COMPRESSION_LEVEL: 3

jobs: 
  build: 
    name: Build and Deploy
    runs-on: ubuntu-latest
    container:
      image: niteo/nixpkgs-nixos-22.05:316b762afdb9e142a803f29c49a88b4a47db80ee

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure Nix
      run: |
          echo "experimental-features = nix-command flakes" > /etc/nix/nix.conf
          echo "sandbox = relaxed" >> /etc/nix/nix.conf
          echo "narinfo-cache-negative-ttl = 0" >> /etc/nix/nix.conf
      
    - uses: cachix/cachix-action@f5f67badd061acb62b5c6e25e763572ca8317004
      with:
        skipPush: true
        installCommand: |
          nix-channel --add ${{env.NIX_NIXPKGS_CHANNEL }} nixpkgs
          nix-channel --update
          nix-env -iA nixpkgs.cachix
        name: ${{  env.CACHIX_COMPOSABLE }}
        authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

    - name: Build
      run: |
        cachix watch-exec --jobs 16 --compression-level $CACHIX_COMPRESSION_LEVEL composable-whitepaper nix -- build --no-update-lock-file --show-trace -L
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-central-1

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Deploy to S3
    #   run: |
    #     aws s3 sync result/ s3://paper.composable.finance
    #     aws cloudfront create-invalidation --distribution-id E23AJ9F0MJOWAM --paths "/*"